FROM node:18-alpine AS base

# Install yarn and dependencies only when needed  
FROM base AS deps
RUN apk add --no-cache libc6-compat python3 make g++
RUN npm install -g yarn
WORKDIR /app

# Configure yarn for better network handling
RUN yarn config set network-timeout 600000
RUN yarn config set network-concurrency 1

# Copy package files
COPY package.json yarn.lock* ./

# Generate yarn.lock if it doesn't exist
RUN yarn install --frozen-lockfile --network-timeout 600000 || yarn install --network-timeout 600000

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Environment variables for build
ARG VITE_API_BASE
ARG VITE_KEYCLOAK_URL
ARG VITE_KEYCLOAK_REALM
ARG VITE_KEYCLOAK_CLIENT_ID

ENV VITE_API_BASE=$VITE_API_BASE
ENV VITE_KEYCLOAK_URL=$VITE_KEYCLOAK_URL
ENV VITE_KEYCLOAK_REALM=$VITE_KEYCLOAK_REALM
ENV VITE_KEYCLOAK_CLIENT_ID=$VITE_KEYCLOAK_CLIENT_ID

# Install yarn in builder as well
RUN npm install -g yarn

# Build the application
RUN yarn build

# Production image, serve with nginx
FROM nginx:alpine AS runner
WORKDIR /app

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration  
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 5173

CMD ["nginx", "-g", "daemon off;"]